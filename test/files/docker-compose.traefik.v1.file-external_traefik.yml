version: "3.7"

services:

  ### ACME test server ###
  pebble:
    image: letsencrypt/pebble
    command: pebble -config /test/my-pebble-config.json -dnsserver 10.77.77.22:8053
    environment:
      - PEBBLE_VA_NOSLEEP=1
    extra_hosts:
      - acme.localhost.com:10.77.77.77 # test ACME server (peeble)
    volumes:
      - ./common/peeble/certs/:/test/certs/:ro # import peeble RootCA
      - ./common/peeble/peeble-config.json:/test/my-pebble-config.json:ro
    networks:
      bluenet:
        ipv4_address: 10.77.77.77
    depends_on:
      - challtestsrv
  challtestsrv: # dns server for pebble
    image: letsencrypt/pebble-challtestsrv:latest
    command: pebble-challtestsrv -defaultIPv6 "" -defaultIPv4 10.77.77.66 # mock DNS responses to traefik
    networks:
      bluenet:
        ipv4_address: 10.77.77.22

  ### Traefik part ###
  traefik:
    image: traefik:v1.7-alpine
    command: /bin/sh -c 'update-ca-certificates && traefik --configFile=/etc/traefik/conf/acme.toml'
    extra_hosts:
      - acme.localhost.com:10.77.77.77 # test ACME server (peeble)
    volumes:
      - ./common/peeble/certs/pebble.minica.pem:/usr/local/share/ca-certificates/pebble.minica.pem:ro # import peeble RootCA
      - "./common/traefik.v1.file.toml:/etc/traefik/conf/acme.toml:ro"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - test-acme-external:/tmp/acme:rw
    ports:
      - "80:80"
      - "443:443"
      - "5002:5002" # Needed for HTTP challenge
    expose:
      - "8080"
    labels:
      - "traefik.port=8080"
      - "traefik.backend=traefikception"
      - "traefik.frontend.rule=Host:traefik.localhost.com"
      - "traefik.enable=true"
    networks:
      internal:
      test-traefik-public-external:
      bluenet:
        ipv4_address: 10.77.77.66

networks:
  internal: # no internet acess
    internal: true
  test-traefik-public-external:
    external: true
  bluenet:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 10.77.77.0/24

volumes:
  test-acme-external:
    external: true